language.name=English
language.selected=Selected {%0} as the base language

invalid.contents=§cInvalid data

mineflow.recipe=Manage recipe
mineflow.command=Manage command trigger
mineflow.event=Manage event trigger
mineflow.form=Manage form trigger
mineflow.export=Export recipes
mineflow.import=Import recipes
mineflow.settings=Settings

; flowItem messages
action.error=§c[{%0}] {%1}

action.target.require=Required target: {%0}
action.target.require.entity=Entity
action.target.require.human=Human
action.target.require.player=Player
action.target.require.item=Item
action.target.require.position=Position
action.target.require.scoreboard=Scoreboard
action.target.require.config=Config File
action.target.require.vector3=Vector 3D
action.target.require.aabb=AABB
action.target.require.world=World
action.target.require.list=List variable
action.target.require.map=Map variable
action.target.require.event=Event
action.target.require.listForm=List form
action.target.require.customForm=Custom form
action.target.require.form=Form
action.target.not.valid=§c{{%1}} is not {%0} variable.

action.error.notNumber=§cThe value must be a number. got {%0}.§f
action.error.overValue=§cThe value should be less than or equal to {%0}. got {%1}.§f
action.error.lessValue=§cThe value must be at least {%0}. got {%1}.§f
action.error.excludedNumber=§cThe value something other than [{%0}]. got {%1}§f

action.error.player.offline=Target is offline.
action.form.target.player=§7<player>§f Variable name of Player
action.form.target.human=§7<human>§f Variable name of Human
action.form.target.entity=§7<entity>§f Variable name of Entity
action.form.target.item=§7<item>§f Variable name of Item
action.form.target.position=§7<position>§f Variable name of Position
action.form.target.block=§7<block>§f Variable name of Block
action.form.target.config=§7<config>§f Variable name of Config
action.form.target.scoreboard=§7<scoreboard>§f Variable name of Scoreboard
action.form.target.world=§7<world>§f Variable name of World
action.form.target.event=§7<event>§f Variable name of Event
action.form.target.listForm=§7<list form>§f Variable name of List form
action.form.target.customForm=§7<custom form>§f Variable name of Custom form
action.form.target.form=§7<form>§f Variable name of Form

action.form.resultVariableName=§7<result>§f Variable name to put the result in
action.form.title=§7<title>§f Title of the form
action.form.description=§7<description>§f Description of the form
action.form.text=§7<text>§f Label of the element
action.form.default=§7<default>§f Default value of the element

action.form.onClose.exit=Terminate execution of the recipe
action.form.onClose.resend=Resend the form
action.form.onClose.continue=Set response to null and continue execution

; action messages
action.add=<Add action>
action.edit=<Edit action>
action.not.found=§cAn error has occurred. (id: {%0} not found)
action.error.recipe=§cAn error has occurred.

action.move.outside=§7<Move outside of this action>

action.doNothing.name=Do nothing
action.doNothing.detail=Do nothing.

action.message.form.message=§7<message>§f message to send

action.sendMessage.name=Send message to chat field
action.sendMessage.detail=Send message "{%1}" to {%0}'s chat field.

action.sendTip.name=Send message to tip field
action.sendTip.detail=Send message "{%1}" to{%0}'s tip field.

action.sendPopup.name=Send message to popup field
action.sendPopup.detail=Send message "{%1}" to{%0}'s popup field.

action.sendJukeboxPopup.name=Send message to jukebox popup field
action.sendJukeboxPopup.detail=Send message "{%1}" to{%0}'s jukebox popup field.

action.sendActionBarMessage.name=Send message to action bar field
action.sendActionBarMessage.detail=Send message "{%1}" to{%0}'s action bar field.

action.sendTitle.name=Send message to title field
action.sendTitle.detail=Send a title "{%1}" and a subtitle "{%2}" to {%0}. ({%3}, {%4}, {%5})
action.sendTitle.form.title=§7<title>§f  message to send
action.sendTitle.form.subtitle=§7<subtitle>§f  message to send
action.sendTitle.form.fadein=§7<fadein>§f fade in time (tick, 20tick = 1sec)
action.sendTitle.form.stay=§7<stay>§f stay time (tick)
action.sendTitle.form.fadeout=§7<fadeout>§f fade out time (tick)

action.sendToast.name=Send toast
action.sendToast.detail=Send a toast ({%1}§f, "{%2}"§f) to {%0}.
action.sendToast.form.title=§7<title>§f Toast title
action.sendToast.form.body=§7<body>§f Toast body

action.broadcastMessage.name=Send a message to everyone
action.broadcastMessage.detail=Send a message "{%0}" to everyone.

action.sendMessageToOp.name=Send message just for op
action.sendMessageToOp.detail=Send a message "{%0}" just for op.

action.sendMessageToConsole.name=Send message just for console
action.sendMessageToConsole.detail=Send a message "{%0}" just for console.

action.setName.name=Rename an entity
action.setName.detail=Rename {%0}'s name to {%1}.
action.setName.form.name=§7<name>§f new name

action.getEntity.name=Get entity from entity ID
action.getEntity.detail=Get an entity with an ID of {%0} and put it in {%1}.
action.getEntity.form.target=§7<id>§f Entity ID
action.getEntity.notFound=There is no entity with an id of {%0}.

action.getPlayer.name=Get player from player name
action.getPlayer.detail=Get a player with name of {%0} and put it in {%1}.
action.getPlayer.form.target=§7<name>§f player name
action.getPlayer.player.notFound=The player was not found.

action.teleport.name=Teleport
action.teleport.detail=Let {%0} teleport to {%1}.

action.teleportToWorld.name=Teleport to the specified world
action.teleportToWorld.detail=Teleports {%0} to World({%1}).
action.teleportToWorld.form.safespawn=Safespawn

action.motion.name=Move entity
action.motion.detail=Give {%0} a motion ({%1}, {%2}, {%3}).
action.motion.form.x=§7<x>§f value to move in the x-axis
action.motion.form.y=§7<y>§f value to move in the y-axis
action.motion.form.z=§7<z>§f value to move in the z-axis

action.setYaw.name=Change entity's yaw.
action.setYaw.detail=Change {%0}'s yaw to {%1}.
action.setYaw.form.yaw=§7<yaw>§f angle of the body

action.setPitch.name=Change entity's pitch.
action.setPitch.detail=Change {%0}'s pitch to {%1}.
action.setPitch.form.pitch=§7<pitch>§f angle of the head

action.setSleeping.name=Sleep
action.setSleeping.detail=Put {%0} to sleep in {%1}.

action.setSitting.name=Sit
action.setSitting.detail=Make {%0} sit in {%1}.

action.setImmobile.name=Immobilize the player
action.setImmobile.detail=Immobilize {%0}.

action.unsetImmobile.name=Cancel player's immobilization
action.unsetImmobile.detail=Cancel {%0}'s immobilization.

action.setInvisible.name=Make a player visible/invisible
action.setInvisible.detail=Make §7{%0}§f {%1}.
action.setInvisible.visible=visible
action.setInvisible.invisible=invisible
action.setInvisible.form.invisible=§7<invisible>§f Invisible

action.executeRecipe.name=Execute the other recipe.
action.executeRecipe.detail=Execute the recipe "{%0}".
action.executeRecipe.form.name=§7<name>§f name of recipe
action.executeRecipe.notFound=§cThe recipe is not found.§f

action.executeRecipeWithEntity.name=Execute the other recipe with a specific target.
action.executeRecipeWithEntity.detail=Execute the recipe "{%0}" with {%1}.

action.callRecipe.name=Callback the other recipe.
action.callRecipe.detail=Callback the recipe "{%0}" and wait for it to finish.
action.callRecipe.form.args=§7<args>§f value passed to a recipe (Enter multiple entries, separated by commas.)

action.eventCancel.name=Cancel event
action.eventCancel.detail=Cancel event.
action.eventCancel.notCancelable=The event cannot cancel.

action.playerChatEventSetMessage.name=Set message to event §lWhen a player chats
action.playerChatEventSetMessage.detail=Set message of §lwhen a player chats§r§f event({§7{%0}§f}) to "{%1}"

action.fourArithmeticOperations.name=Do an four arithmetic operations
action.fourArithmeticOperations.detail=Calculate ({%0} {%1} {%2}) and put the result in {%3}.
action.fourArithmeticOperations.form.value1=§7<value1>§f the first value
action.fourArithmeticOperations.form.operator=§7<operator>§f operator
action.fourArithmeticOperations.form.value2=§7<value2>§f the second value

action.calculate.name=Do a function operation(1)
action.calculate.detail=Calculate {%1} with x={%0} and put the result in the {%2}.
action.calculate.form.value=§7<value>§f value of x
action.calculate.operator.unknown=Unknown operator: {%0}

action.calculate2.name=Do a function operation(2)
action.calculate2.detail=Calculate {%2} with x={%0} and y={%1} and put the result in the {%3}.
action.calculate2.form.value1=§7<value>§f value of x
action.calculate2.form.value2=§7<value>§f value of y

action.getPi.name=Get the pi
action.getPi.detail=Get the pi and put it in {%0}.

action.getE.name=Get the Napier's constant
action.getE.detail=Get the Napier's constant and put it in {%0}.

action.addDamage.name=Attack the entity.
action.addDamage.detail=deal {%1} damage to {%0}
action.addDamage.form.damage=§7<damage>§f amount of damage

action.variable.form.name=§7<name>§f variable name
action.variable.form.key=§7<key>§f variable key
action.variable.form.value=§7<value>§f variable value
action.variable.form.type=§7<type>§f variable type
action.variable.form.global=Global variable

action.addVariable.name=Add a variable
action.addVariable.detail=Add a {%2} variable named {%0} with a value of {%1} to {%3}.

action.deleteVariable.name=Remove a variable
action.deleteVariable.detail=Remove the variable named {%0} from {%1}.

action.addListVariable.name=Add a value to the list variable
action.addListVariable.detail=Add [{%1}] to the {%2} list named "{%0}".
action.addListVariable.error.existsOtherType=Other types of variables already exist: {%0}, {%1}

action.removeContent.name=Remove a value at the specified index from the list variable
action.removeContent.detail=Remove a value at the index {%1} from the {%2} list named "{%0}".

action.removeContentByValue.name=Remove a value from the list variable
action.removeContentByValue.detail=Remove {%1} from the {%2} list named "{%0}".

action.createList.name=Create a list variable
action.createList.detail=Create a list named {%0} with the value [{%1}] in {%2}.

action.addMapVariable.name=Add a value to the map variable
action.addMapVariable.detail=Add a [{%2}] to a key called "{%1}" on a {%3} map called "{%0}".

action.createMap.name=Create a map variable
action.createMap.detail=Create a {%3} map variable named {%0} with the key [{%1}] and the value [{%2}]

action.createMapFromJson.name=Create a map variable from json
action.createMapFromJson.detail=Create a {%2} map variable named {%0} from({%1})

action.createItem.name=Create item variable
action.createItem.detail=Create an item({%1},{%2},{%3}) and put it in {%0}.
action.createItem.item.notFound=Item not found.
action.createItem.form.id=§7<id>§f item ID or name
action.createItem.form.count=§7<count>§f amount of item.(1 stack if left blank)
action.createItem.form.name=§7<name>§f name of item.(left blank to default)

action.getWorldByName.name=Get a world by world name
action.getWorldByName.detail=Get the world named §7{%0}§f and put it in §7{%1}§f．
action.getWorldByName.form.worldName=§7<world>§f World name

action.setWorldTime.name=Set the world time
action.setWorldTime.detail=Set the time of world §7{%0}§f to §7{%1}§f．
action.setWorldTime.form.time=§7<time>§f World time (0~24000)

action.createPosition.name=Create position variable
action.createPosition.detail=Put the position({%1},{%2},{%3},{%4}) into a variable named {%0}.
action.createPosition.world.notFound=The world not found.
action.createPosition.form.x=§7<x>§f X coordinate
action.createPosition.form.y=§7<y>§f Y coordinate
action.createPosition.form.z=§7<z>§f Z coordinate
action.createPosition.form.world=§7<world>§f world name

action.createBlock.name=Create block variable
action.createBlock.detail=Create a block({%1}) and put in in {%0}.
action.createBlock.form.id=§7<block>§f block ID or name

action.getNearestEntity.name=Get an entity nearest to the specified position
action.getNearestEntity.detail=Get an entity nearest to the §7{%0}§f and put it in §7{%1}§f．
action.getNearestEntity.form.maxDistance=§7<distance>§f Maximum distance to search

action.getNearestLiving.name=Get a living nearest to the specified position
action.getNearestLiving.detail=Get a living nearest to the §7{%0}§f and put it in §7{%1}§f．

action.getNearestPlayer.name=Get a player nearest to the specified position
action.getNearestPlayer.detail=Get a player nearest to the §7{%0}§f and put it in §7{%1}§f．

action.setBlock.name=Set a block
action.setBlock.detail=Set block({%1}) at {%0}.

action.sendForm.name=Send a form
action.sendForm.detail=Display a form named "{%1}" to {%0}.
action.sendForm.form.name=§7<form>§f form name

action.createListForm.name=Create a list form
action.createListForm.detail=Create a list form(title="{%0}", description="{%1}")

action.showFormVariable.name=Show a form built with variable
action.showFormVariable.detail=Show form §7{{%1}}§f to §7{{%0}}§f
action.showFormVariable.form.close=§7<close>§f Behavior when form is closed

action.addButton.name=Add a button to list form
action.addButton.detail=Add a button(text="{%1}") to form §7{%0}§f

action.setHealth.name=Set entity's health
action.setHealth.detail=Set {%0}'s health to {%1}.
action.setHealth.form.health=§7<health>§f new health

action.setMaxHealth.name=Set entity's maximum health
action.setMaxHealth.detail=Set {%0}'s maximum health to {%1}.

action.setScale.name=Set entity's scale
action.setScale.detail=Set {%0}'s scale to {%1}.
action.setScale.form.scale=§7<scale>§f size(1 is the default value.)

action.addEffect.name=Add effect to entity
action.addEffect.detail=Add effect({%1}, {%2}) to {%0} for {%3} seconds.
action.addEffect.form.effect=§7<id>§f effect id or name
action.addEffect.form.time=§7<time>§f duration for the effect to last
action.addEffect.form.power=§7<power>§f strength of the effect
action.addEffect.form.visible=Show particles
action.effect.notFound=The effect "{%0}" is not found.

action.clearEffect.name=Remove specific effect from entity
action.clearEffect.detail=Remove effect({%1}) from {%0}.

action.clearAllEffect.name=Clear effect from entity
action.clearAllEffect.detail=Clear effect from {%0}.

action.kick.name=Kick the player
action.kick.detail=Kick the {%0} for the reason "{%1}".
action.kick.form.reason=§7<reason>§f reason

action.transfer.name=Transfer a player to another server
action.transfer.detail=Transfer §7{%0}§f to §7{%1}:{%2}§f.
action.transfer.form.ip=§7<ip>§f Server address
action.transfer.form.port=§7<port>§f Port

action.setFood.name=Set player's food
action.setFood.detail=Set {%0}'s food to {%1}.
action.setFood.form.food=§7<food>§f new food

action.setGamemode.name=Set player's gamemode
action.setGamemode.detail=Set {%0}'s gamemode to {%1}.
action.setGamemode.form.gamemode=§7<gamemode>§f new gamemode
action.gamemode.survival=Survival Mode
action.gamemode.creative=Creative Mode
action.gamemode.adventure=Adventure Mode
action.gamemode.spectator=Spectator Mode

action.clearInventory.name=Clear inventory
action.clearInventory.detail=Clear {%0}'s inventory.

action.showBossbar.name=Show bossbar
action.showBossbar.detail=Show bossbar(title={%1},max={%2},value={%3},color={%4},id={%5}) to {%0}.
action.showBossbar.form.title=§7<title>§f title of bossbar
action.showBossbar.form.max=§7<max>§f maximum value of bossbar
action.showBossbar.form.value=§7<value>§f current value of bossbar
action.showBossbar.form.id=§7<id>§f id of bossbar

action.removeBossbar.name=Remove bossbar
action.removeBossbar.detail=Remove a bossbar with {%1} ID from {%0}.

action.playSound.name=Play sound at player
action.playSound.detail=Play a sound(volume={%2},pitch={%3}) called {%1} on {%0}.
action.playSound.form.sound=§7<sound>§f name of sound
action.playSound.form.volume=§7<volume>§f volume of sound
action.playSound.form.pitch=§7<pitch>§f pitch of sound

action.playSoundAt.name=Play sound at position
action.playSoundAt.detail=Play a sound(volume={%2},pitch={%3}) called {%1} at {%0}.

action.emote.name=Emote
action.emote.detail=§7{%0}§f emotes §7{%1}§f.
action.emote.form.id=§7<id>§f Emote ID

action.setGamerule.form.gamerule=§7<gamerule>§f Gamerule name
action.setGamerule.form.value=§7<value>§f Gamerule value

action.sendBoolGamerule.name=Set gamerule
action.sendBoolGamerule.detail=Set gamerule(§7{%1}§f) of {§7{%0}§f} to §7{%2}§f

action.addItem.name=Add items to inventory
action.addItem.detail=Add items({%1}) to {%0}'s inventory.

action.setItemInHand.name=Set item in hand
action.setItemInHand.detail=Set items({%1}) in the {%0}}s hand.

action.removeItem.name=Remove specified items from inventory
action.removeItem.detail=Remove items({%1}) from {%0}'s inventory.

action.removeItemAll.name=Remove specified items all from inventory
action.removeItemAll.detail=Remove items({%1}) all from {%0}'s inventory.

action.addEnchant.name=Add enchantment to item
action.addEnchant.detail=Add enchantment(id={%1},world={%2}) to Item({%0}).
action.addEnchant.form.id=§7<id>§f enchantment name or id
action.addEnchant.form.level=§7<level>§f enchantment level
action.addEnchant.enchant.notFound=The enchantment "{%0}" is not found.

action.setItem.name=Set items to a specified index in the inventory
action.setItem.detail=Set items({%1}) to index {%2} in {%0}'s inventory.
action.setItem.form.index=§7<index>§f index to set the item to

action.command.name=Execute a command
action.command.detail=Execute a command "/{%1}" from {%0}.
action.command.form.command=§7<command>§f command (without first /)

action.commandConsole.name=Execute a command from console
action.commandConsole.detail=Execute a command "/{%0}" from console.

action.chat.name=Let a player chat
action.chat.detail={%0} chats "{%1}".

action.addParticle.name=Show particle
action.addParticle.detail=Show particle({%1}) at {%0} {%2} time{%3}.
action.addParticle.form.particle=§7<particle>§f particle name
action.addParticle.form.amount=§7<amount>§f number of times to show

action.random.name=Generate a random number
action.random.detail=Generate a random number in the range {%0} to {%1}.
action.random.form.min=§7<min>§f minimum value
action.random.form.max=§7<max>§f maximum value

action.wait.name=Wait
action.wait.detail=Wait for {%0} seconds.
action.wait.form.time=§7<time>§f number of seconds

action.save.name=Save data
action.save.detail=Save recipes, forms and variables.

action.equipArmor.name=Equip the player's armor.
action.equipArmor.detail=Change the {%0}'s {%2} to {%1}
action.equipArmor.form.index=§7<index>§fWhere to change the armor.
action.equipArmor.helmet=Helmet
action.equipArmor.chestplate=Chestplate
action.equipArmor.leggings=Leggings
action.equipArmor.boots=Boots

action.createConfig.name=Create a configuration file
action.createConfig.detail=Create a configuration file({%1}) and put it in {%0}.
action.createConfig.form.name=§7<name>§f name of the configuration file

action.setConfig.name=Set a data in configuration file.
action.setConfig.detail=Set the data with key {%1} to {%2} in a config({%0}).
action.setConfig.form.key=§7<key>§f key of data
action.setConfig.form.value=§7<value>§f value to set

action.removeConfig.name=Remove a data from configuration file.
action.removeConfig.detail=Remove the data with key {%1} from a config({%0}).

action.saveConfig.name=Save a configuration file
action.saveConfig.detail=Save a configuration file named {%0}.

action.addPermission.name=Add permission to a player
action.addPermission.detail=Add permission "{%1}" to {%0}.

action.removePermission.name=Remove permission from a player
action.removePermission.detail=Remove permission "{%1}" from {%0}.

action.getVariable.name=Create variable from specified variable name.
action.getVariable.detail=Put the value of {%0} into a variable named {%1}.
action.getVariable.form.target=§7<name>§f Name of variable
action.getVariable.form.fallbackValue=§7<fallback>§f Value if the variable does not exist

action.count.name=Count the number of elements in a list variable
action.count.detail=Put the number of elements in the list variable({%0}) into {%1}.
action.count.error.notList=That variable is not a list variable.
action.count.form.name=§7<name>§f name of variable

action.exit.name=Exit the recipe
action.exit.detail=Exit the recipe

action.input.name=Requesting input
action.input.detail=Send the input form({%1}) to {%0} and put the result in {%2}.
action.input.form.text=§7<text>§f text
action.input.form.resendOnClose=Resend when the form is closed

action.slider.name=Send a slider form to a player
action.slider.detail=\n§7-----§f Send a slider form to a player §7-----§f\nTarget: §7{{%0}}§f\nTitle: {%1}\Label: {%2}\nMin: {%3}, Max: {%4}, Step: {%5}\nDefault: {%6}\nResend on close: {%8}\nResult: §7{{%7}}§f\n§7-----------------------------------§f

action.dropdown_base.detail=\n§7-----§f {%0} §7-----§f\nTarget: §7{{%1}}§f\nTitle: {%2}\nLabel: {%3}\nOptions: {%4}\nDefault: {%5}\nResend on close: {%7}\nResult: §7{{%6}}§f\n§7-----------------------------------§f

action.dropdown.name=Send a dropdown form to a player

action.stepSlider.name=Send a step slider form to a player

action.sendConfirmForm.name=Send confirmation form
action.sendConfirmForm.detail=§7-----§f Send confirmation form §7-----§f\nTarget: §7{{%0}}§f\nTitle: {%1}\nContent: {%2}\nButton(Yes): {%3}\nButton(No): {%4}\nResend on close: {%6}\nResult: §7{{%5}}§f\n§7-----------------------------------§f
action.sendConfirmForm.form.title=§7<title>§f Title of the form
action.sendConfirmForm.form.text=§7<text>§f Confirmation message
action.sendConfirmForm.form.yes=§7<yes>§f Text of "Yes" button
action.sendConfirmForm.form.no=§7<no>§f Text of "No" button

action.select.name=Send menu form
action.select.detail=Send the menu({%1}, [{%2}]) to {%0} and put the result in {%3}.

action.setLore.name=Set item lore
action.setLore.detail=Set item({%0}) lore to [{%1}].
action.setLore.form.lore=§7<lore>§f lore

action.setItemData.name=Set a item data
action.setItemData.detail=Set a data(key=§7{%1}§f,value=§7{%2}§f) to item §7{{%0}}§f
action.setItemData.form.key=§7<key>§f data key
action.setItemData.form.value=§7<value>§f data value

action.setItemDataFromNBTJson.name=Set item data from json
action.setItemDataFromNBTJson.detail=Set data(§7{%1}§f) to item §7{{%0}}§f

action.getItemData.name=Get a item data
action.getItemData.detail=Get a data(key=§7{%1}§f) from item §7{{%0}}§f
action.getItemData.tag.not.exists=The data §7{%0}§f is not exists

action.removeItemData.name=Remove a item data
action.removeItemData.detail=Remove a data(key=§7{%1}§f) from item §7{{%0}}§f

action.setArmorColor.name=Set the color of the leather armor
action.setArmorColor.detail=Set the color of the leather armor §7{%0}§f to rgb({%1}, {%2}, {%3})
action.setArmorColor.not.armor=The item {%0} is not armor.
action.setArmorColor.form.red=§7<red>§f Red value of the color
action.setArmorColor.form.green=§7<green>§f Green value of the color
action.setArmorColor.form.blue=§7<blue>§f Blue value of the color

action.getInventory.name=Get all the items in the inventory and put in a variable
action.getInventory.detail=Put items from {%0}'s inventory into {%1}.

action.getArmorInventory.name=Get all the items in the armor inventory and put in a variable
action.getArmorInventory.detail=Put items from {%0}'s armor inventory into {%1}.

action.editString.name=Edit a string
action.editString.detail="{%0}", {%1} "{%2}"
action.editString.join=join to the:
action.editString.delete=remove:
action.editString.repeat=repeats for:
action.editString.split=split by:

action.setItemDamage.name=Change the damage value of an item.
action.setItemDamage.detail=Set the {%0}'s damage value to {%0}.
action.setDamage.form.damage=§7<damage>§f damage value

action.setItemCount.name=Change the number of items.
action.setItemCount.detail=Set the {%0}'s count to {%0}.

action.setItemName.name=Change the name of an item.
action.setItemName.detail=Set the {%0}'s name to "{%0}".

action.createScoreboard.name=Create scoreboard variable
action.createScoreboard.detail=Create scoreboard(id={%1}, name={%2}, type={%3}) and put it in {%0}.
action.createScoreboard.form.id=§7<id>§f id of scoreboard
action.createScoreboard.form.displayName=§7<displayName>§f display name of scoreboard
action.createScoreboard.form.type=§7<type>§f display location of scoreboard

action.showScoreboard.name=Show scoreboard
action.showScoreboard.detail=Show scoreboard({%1}) to {%0}.

action.hideScoreboard.name=Hide scoreboard
action.hideScoreboard.detail=Hide scoreboard({%1}) from {%0}.

action.setScore.name=Set a score on the scoreboard
action.setScore.detail=Set the score of "{%1}" on the scoreboard({%0}) to {%2}
action.setScore.form.name=§7<name>§f name of score
action.setScore.form.score=§7<score>§f score

action.incrementScore.name=Increment a score on the scoreboard
action.incrementScore.detail=Increment the score of "{%1}" on the scoreboard({%0}) by {%2}.

action.decrementScore.name=Decrement a score on the scoreboard
action.decrementScore.detail=Decrement the score of "{%1}" on the scoreboard({%0}) by {%2}.

action.removeScore.name=Remove a score form scoreboard
action.removeScore.detail=Remove a score named "{%1}" from scoreboard({%0}).

action.setScoreName.name=Set a score name on the scoreboard
action.setScoreName.detail=Set the score name with a score of {%1} on the scoreboard({%0}) to "{%2}".

action.removeScoreName.name=Remove a score name from the scoreboard
action.removeScoreName.detail=Remove a score name with a score of {%1} on the scoreboard({%0}).

action.joinToString.name=Join list variable with a string
action.joinToString.detail=Join list variable({%0}) elements with "{%1}" and put it in {%2}.
action.joinToString.form.separator=§7<separator>§f separator

action.getBlock.name=Get a block with specified coordinates
action.getBlock.detail=Get a block at ({%0}) and put it in {%1}

action.strlen.name=Gets the length of a string
action.strlen.detail=Gets the length of the string "{%0}" and put it in {%1}.
action.strlen.form.value=§7<string>§f String

action.addXp.name=Increase or decrease the player's experience.
action.addXp.detail=Changes the {%0}'s xp by {%1}.
action.addXp.form.xp=§7<xp>§f value to increase or decrease

action.addXpLevel.name=Increase or decrease the player's xp level.
action.addXpLevel.detail=Changes the {%0}'s xp level by {%1}.

action.allowFlight.name=Allows a player to fly
action.allowFlight.detail={%1} ({%0}) to fly.
action.allowFlight.allow=Allows
action.allowFlight.notAllow=Dont't allow
action.allowFlight.form.allow=§7<allow>§f allow flight

action.getTargetBlock.name=Get a block in line of sight
action.getTargetBlock.detail=Get a block in {%0}'s line of sight(max={%1}) and put in in {%2}
action.getTargetBlock.form.max=§7<maxDistance>§f max distance to get

action.createHuman.name=Create a human entity and spawn it
action.createHuman.detail=Create a human in the skin of {%0} and spawn it on {%1} and put it in a variable({%2}).
action.createHuman.form.skin=§7<skin>§f variable name of Player to use the skin

action.allowClimbWalls.name=Allows a player to climb walls
action.allowClimbWalls.detail={%1} ({%0}) to climb walls.
action.allowClimbWalls.form.allow=§7<allow>§f allow climb walls

action.getDistance.name=Get the distance between two positions
action.getDistance.detail=Get the distance between {%0} and {%1} and put it in {%2}.
action.getDistance.form.pos1=§7<pos1>§f variable name of first position
action.getDistance.form.pos2=§7<pos2>§f variable name of second position

action.calculateRPN.name=Calculate the formula in reverse Polish notation
action.calculateRPN.detail=Calculate the formula ({%0}).
action.calculateRPN.form.value=§7<formula>§f formula (Separate by spaces. Available Operators: +, -, *, /, %)

action.getDate.name=Get the current date with a specific format
action.getDate.detail=Get the current date with ({%0}) and put it in {%1}
action.getDate.form.format=§7<format>§f date format

action.getEntitySide.name=Get the coordinates of an entity's side.
action.getEntitySide.detail=Get the coordinates of a location {%2} blocks ahead of {%0} in the {%1} direction and put it in {%3}.
action.getEntitySide.form.direction=§7<direction>§f direction to get
action.getEntitySide.form.steps=§7<step>§f step
action.getEntitySide.direction.notFound=Direction ({%0}) is not found.

action.dropItem.name=Drop items on a specified location
action.dropItem.detail=Drop {%0} on {%1}.

action.lookAt.name=Make the entity look at the specified position
action.lookAt.detail={%0} looks at {%1}.

action.moveTo.name=Move the entity to the direction of the specified position.
action.moveTo.detail=Move {%0} towards {%1} with speed ({%2}, {%3}, {%4})
action.moveTo.form.speedX=§7<speedX>§f x-axis speed
action.moveTo.form.speedY=§7<speedY>§f y-axis speed
action.moveTo.form.speedZ=§7<speedZ>§f z-axis speed

action.registerShapedRecipe.name=Add crafting recipe
action.registerShapedRecipe.detail=Add crafting recipe
action.registerShapedRecipe.shape=Shape
action.registerShapedRecipe.ingredients=Ingredients
action.registerShapedRecipe.results=Crafting Results
action.registerShapedRecipe.recipe.empty=Ingredients are not set

action.position.world.different=You need to specify the same world

action.randomPosition.name=Generate a random position
action.randomPosition.detail=Generate a random position in the range {%0} to {%1}.

action.foreachPosition.name=Loop for each position.
action.foreachPosition.description=Repeat from the first position to the second position.
action.foreachPosition.detail=\n\n§7==§f EachPos(§7{{%3}}§f = {%1} -> {%2}) §7==§f\n{%0}\n§7================================§f
action.foreachPosition.form.pos1=§7<pos1>§f variable name of first position
action.foreachPosition.form.pos2=§7<pos2>§f variable name of second position
action.foreachPosition.form.current=§7<current>§f Variable name of current position in the loop

action.positionAddition.name=Add values to position components.
action.positionAddition.detail=Add ({%1},{%2},{%3}) to (x,y,z) in {%0} and put it in {%4}.
action.positionAddition.form.x=§7<x>§f Value to add to x-coordinate
action.positionAddition.form.y=§7<y>§f Value to add to y-coordinate
action.positionAddition.form.z=§7<z>§f Value to add to z-coordinate

action.callTrigger.name=Fire a custom trigger
action.callTrigger.detail=Fire a custom trigger ({%0})
action.callTrigger.form.identifier=§7<identifier>§f Trigger identifier

action.createAABB.name=Create an AABB
action.createAABB.detail=Create an AABB (({%0}, {%1}, {%2}), ({%3}, {%4}, {%5}))
action.createAABB.form.minX=§7<min x>§f Minimum X
action.createAABB.form.minY=§7<min y>§f Minimum Y
action.createAABB.form.minZ=§7<min z>§f Minimum Z
action.createAABB.form.maxX=§7<max x>§f Maximum X
action.createAABB.form.maxY=§7<max y>§f Maximum Y
action.createAABB.form.maxZ=§7<max z>§f Maximum Z

action.createAABBByVector3Variable.name=Create an AABB from position variables
action.createAABBByVector3Variable.detail=Create an AABB from position variables. (§7{%0}§f, §7{%1}§f)
action.createAABBByVector3Variable.form.pos1=§7<pos1>§f First position variable
action.createAABBByVector3Variable.form.pos2=§7<pos2>§f Second position variable

action.getEntitiesInArea.name=Get entities in the specified area
action.getEntitiesInArea.detail=Get entities in (§7{%0}§f, §7{%1}§f) and put it in §7{%2}§f

action.getPlayersInArea.name=Get players in the specified area
action.getPlayersInArea.detail=Get players in (§7{%0}§f, §7{%1}§f) and put it in §7{%2}§f

action.setPlayerData.name=Set a player data
action.setPlayerData.detail=§7{%0}.data.{%1}§f = §7{%2}§f
action.setPlayerData.form.name=§7<name>§f Name of data
action.setPlayerData.form.data=§7<data>§f Data
action.setPlayerData.form.default=§7<default>§f Initial value of data

action.setDefaultPlayerData.name=Set the default value for a player data
action.setDefaultPlayerData.detail=Set the default value of §7<player>.data.{%1}§f to {%2}

; condition messages
condition.add=<Add condition>
condition.edit=<Edit condition>
condition.not.found=The condition not found: {%0}

condition.checkNothing.name=Check nothing
condition.checkNothing.detail=Check nothing.

condition.isFlying.name=The player is flying
condition.isFlying.detail=The player {%0} is flying.

condition.isGliding.name=The player is gliding
condition.isGliding.detail=The player {%0} is gliding.

condition.isSwimming.name=The player is swimming
condition.isSwimming.detail=The player {%0} is swimming.

condition.isSprinting.name=The player is sprinting
condition.isSprinting.detail=The player {%0} is sprinting.

condition.isOp.name=The player is op
condition.isOp.detail=The player {%0} is op.

condition.isSneaking.name=The entity is sneaking
condition.isSneaking.detail=The entity {%0} is sneaking.

condition.isHandItem.name=Having a specified item in player's hand
condition.isHandItem.detail=Having a item({%1}) in {%0}}'s hand.

condition.canAddItem.name=Can add item to inventory
condition.canAddItem.detail=Can add item({%1}) to {%0}'s inventory.

condition.existsItem.name=Contains specified item in the inventory
condition.existsItem.detail=Contains a item({%1}) in the {%0}'s inventory.

condition.existsArmor.name=Contains specified item in the armor inventory
condition.existsArmor.detail=Contains a item({%1}) in the {%0}'s armor inventory.

condition.removeItemCondition.name=Remove item if contains it in the inventory
condition.removeItemCondition.detail=Remove item({%1}) if contains it in {%0}'s inventory.

condition.comparisonNumber.name=Compare the numbers.
condition.comparisonNumber.detail={%0} {%1} {%2}.
condition.comparisonNumber.form.value1=§7<value1>§f first value
condition.comparisonNumber.form.operator=§7<operator>§f operator
condition.comparisonNumber.form.value2=§7<value2>§f second value

condition.comparisonString.name=Compare the character string.
condition.comparisonString.detail={%0} {%1} {%2}

condition.isActiveEntity.name=The entity with the specified ID is active
condition.isActiveEntity.detail=Check if an entity with {%0} ID is alive and online
condition.isActiveEntity.form.entityId=§7<id>§f entity ID

condition.isActiveEntityVariable.name=If the entity is active
condition.isActiveEntityVariable.detail=If {%0} is alive and online

condition.isPlayer.name=The entity with the specified ID is the Player
condition.isPlayer.detail=The entity with {%0} ID is Player.

condition.isPlayerVariable.name=If the entity is the Player
condition.isPlayerVariable.detail=If {%0} is a Player.

condition.isCreature.name=The entity with the specified ID is the Creature
condition.isCreature.detail=The entity with {%0} ID is Creature.

condition.isCreatureVariable.name=If the entity is the Creature
condition.isCreatureVariable.detail=If {%0} is a Creature.

condition.existsVariable.name=If the variable exists
condition.existsVariable.detail=If the variable "{%0}" exists.

condition.existsListVariableKey.name=If the key of the list variable exists
condition.existsListVariableKey.detail=If {%1} exist in a {%2} list variable named {%0}.

condition.gamemode.name=If the player's gamemode is the specified one
condition.gamemode.detail=If {%0}'s gamemode is {%1}.
condition.gamemode.form.gamemode=§7<gamemode>§f gamemode

condition.randomNumber.name=If the random number is the one you specify.
condition.randomNumber.detail=If the random number in the range {%0} to {%1} is {%2}.
condition.randomNumber.form.min=§7<min>§f minimum value
condition.randomNumber.form.max=§7<max>§f maximum value
condition.randomNumber.form.value=§7<value>§f value

condition.inArea.name=If the entity is in the specified area
condition.inArea.detail=If {%0} is in the range of {%1} to {%2}.
condition.inArea.form.pos1=§7<pos1>§f first position
condition.inArea.form.pos2=§7<pos2>§f second position

condition.inWorld.name=If the entity is in the specified world
condition.inWorld.detail=If {%0} is in the world({%1}).

condition.hasPermission.name=The player has permission
condition.hasPermission.detail=If {%0} has the permission "{%1}".
condition.hasPermission.form.permission=§7<permission>§f permission name

condition.existsConfigFile.name=Exists configuration file
condition.existsConfigFile.detail=If there is a configuration file named "{%0}".

condition.existsConfig.name=Exists data in configuration file
condition.existsConfig.detail=If the data named {%1} exists in the configuration file ({%0})
condition.existsConfig.form.key=§7<key>§f name of data

condition.isPlayerOnline.name=A player is online
condition.isPlayerOnline.detail=A player({%0}) is online.
condition.isPlayerOnline.form.name=§7<player>§f player name

condition.isPlayerOnlineByName.name=A player with the specified name is online
condition.isPlayerOnlineByName.detail=A player named "{%0}" is online.

condition.onlinePlayerLessThan.name=Less than the specified number of players online
condition.onlinePlayerLessThan.detail=Less than the {%0} of players online.

condition.onlinePlayerMoreThan.name=More than the specified number of players online
condition.onlinePlayerMoreThan.detail=More than the {%0} of players online.

condition.hasItemData.name=The item has a data
condition.hasItemData.detail=Item §7{{%0}}§ has a data(key=§7{%1}§f)

condition.isSameItem.name=Two items are the same
condition.isSameItem.detail=Item §7{{%0}}§f is the same as §7{{%1}}§f. (compare nbt tags: {%2})
condition.isSameItem.form.checkCompound=§7<tag>§f Compare NBT tags

condition.isSameBlock.name=Two blocks are the same
condition.isSameBlock.detail=Block §7{{%0}}§f is the same as §7{{%1}}§.

; action messages
action.if_base.detail=\n\n§7========§f {%0} §7========§f\n{%1}\n§7~~~~~~~~~~~~~~~~~~~~~~~~~~~§f\n{%2}\n§7================================§f

action.if.name=if
action.if.description=Execute actions when all conditions are met.

action.if_not.name=if not
action.if_not.description=Execute actions when one or more conditions are not met.

action.else.name=else
action.else.description=Executes actions when the previous condition is not met.
action.else.detail=\n\n§7=============§f else §7=============§f\n{%0}\n§7================================§f

action.elseif.name=else if
action.elseif.description=Executes actions when all conditions are met without matching the previous one.

action.repeat.name=Repeat a specified number of times
action.repeat.description=Repeat a specified number of times.
action.repeat.detail=\n\n§7========§f repeat({%0}) §7========§f\n{%1}\n§7================================§f
action.repeat.editCount=Change the number of repetitions.
action.repeat.repeatCount=Number of times to repeat
action.repeat.start=Initial value of the loop counter

action.for.name=[for] Repeat from the specified number to the specified number.
action.for.description=Repeat from the specified number to the specified number.
action.for.detail=\n§7====§f for({%2} <= §7{{%1}}§f < {%3}; steps: {%4}) §7====§f\n{%0}\n§7================================§f
action.for.setting=Repetition Settings
action.for.counterName=Name of counter variable
action.for.start=First number
action.for.end=Last number
action.for.fluctuation=Value to be increased or decreased in one loop

action.foreach.name=[foreach] Repeat for the elements of the list
action.foreach.description=Repeat for the elements of the list
action.foreach.detail=\n§7==§f foreach(§7{{%1}}§f as §7{{%2}}§f => §7{{%3}}§f) §7==§f\n{%0}n§7================================§f
action.foreach.error.notVariable=The list variable "{%0}" is not found.
action.foreach.listVariableName=List variable name
action.foreach.keyVariableName=variable name for the key
action.foreach.valueVariableName=variable name for the value

action.whileTask.name=Repeat for every specified seconds while conditions are match.
action.whileTask.description=Repeat for every specified number of seconds while the conditions are match.
action.whileTask.detail=\n\n§7========§f WhileTask({%2}) §7========§f\n{%0}\n§7~~~~~~~~~~~~~~~~~~~~~~~~~~~§f\n{%1}\n§7================================§f
action.whileTask.editInterval=Change the interval
action.whileTask.interval=interval (tick, 20tick=1 second)
action.whileTask.limit=Maximum loop count (-1 for infinite)

action.group.name=Action group
action.group.description=Action group
action.group.detail=\n\n§7------------------------§f\n{%0}\n§7------------------------§f

action.addLanguageMappings.name=Add message mappings
action.addLanguageMappings.detail=Add following messages with the key §7{%0}§f:\n§7-§f {%1}
action.addLanguageMappings.form.key=§7<key>§f Key to replace the message
action.addLanguageMappings.form.message=§7<message>§f Message of {%0}. (optional)
action.addLanguageMappings.empty=Please enter at least one message.

action.addSpecificLanguageMapping.name=Add a message mapping in a specific language
action.addSpecificLanguageMapping.detail=Add a message "{%2}" to {%0}. (key={%1})
action.addSpecificLanguageMapping.form.language=§7<language>§f Language name [{%0}，and so on]
action.addSpecificLanguageMapping.form.message=§7<message>§f Message

action.getLanguageMessage.name=Get a message with a specific key and language
action.getLanguageMessage.detail=Get a message with key §7{%2}§f from {%0}．(parameters=[{%1}])
action.getLanguageMessage.form.parameters=§7<parameters>§f Values to insert the message

condition.logical_operator.detail=\n§7---------§f {%0} §7---------§f\n{%1}\n§7------------------------§f

condition.and.name=and
condition.and.detail=All of the conditions match.

condition.or.name=or
condition.or.detail=One or more of the conditions match.

condition.not.name=not
condition.not.detail=Reverse the result.

condition.nand.name=nand
condition.nand.detail=One or more of the conditions doesn't match.

condition.nor.name=nor
condition.nor.detail=All of the conditions doesn't match.

; recipe messages
recipe.noActions=There aren't any actions yet.

recipe.json.decode.failed=Failed to load {%0}. : {%1}
recipe.json.key.missing=Can't find the required key
recipe.load.failed=Failed to load the recipe "{%0}". : {%1}
recipe.load.failed.action=Failed to load the action. : @{%0}, {%1}, {%2}

recipe.execute.failed=Failed to execute the action. : {%0} @{%1} > {%2}

recipe.save.failed=Failed to save the recipe. : {%0}

recipe.add=<Add recipe to this group>
recipe.group.delete=<Delete this recipe group>
recipe.group.delete.not.empty=§cYou need to delete all recipes in the group before delete the group.

recipe.argument.type.error=Failed to execute the recipe "{%0}". Recipe argument[{%1}] must be type {%2}. Got {%3}.

recipe.template=Recipe template

recipe.template.command.alias=Command alias
recipe.template.command.alias.command=Command to run
recipe.template.command.alias.alias=Alias

recipe.template.block.specific=Triggers of specific blocks
recipe.template.block.id=Block id
recipe.template.block.trigger=Trigger

recipe.template.addon.manifest=Manifest recipe for addon
recipe.template.addon.manifest.path=Target recipe name
recipe.template.addon.manifest.id=Action id
recipe.template.addon.manifest.category=Action category
recipe.template.addon.manifest.name=Action name
recipe.template.addon.manifest.description=Action description
recipe.template.addon.manifest.name.change=§eThe name of this recipe will be changed to "_manifest".

; form messages
form.add=<Add>
form.back=<Back>
form.cancel=<Cancel>
form.edit=<Edit>
form.exit=<Exit>
form.yes=Yes
form.no=No
form.example=example) {%0}
form.cancelAndBack=<Cancel and back>
form.insufficient=Please fill out the required fields.
form.selectButton=§7Please select a button
form.changed=§bSuccessfully changed.§f
form.cancelled=§e§bCanceled.§f§f
form.added=§bSuccessfully added.§f
form.move=<Move>
form.moved=§bSuccessfully moved.§f
form.move.to.here=§7<Move to here>§f
form.move.target.invalid=§eYou can't move action there.
form.search=<Search>
form.duplicate=<Duplicate>
form.duplicate.success=§bSuccessfully duplicated.§f

form.delete=<Delete>
form.delete.confirm=Are you sure want to delete "{%0}"?\nOnce deleted, it cannot be restored.
form.deleted=§bSuccessfully deleted.§f

form.home.title=/mineflow
form.home.rename.title=Rename
form.home.rename.content=""{%0}" already exists.\nDo you want to change it to "{%1}"?"

form.actionContainer.list.title={%0} > Action list
form.actionContainer.move.title={%0} > {%1} > Move
form.actionContainer.move.content=Move it before the selected action.

form.action.addedItemMenu.title={%0} > Action > {%1}
form.action.category.title={%0} > New action > Select category
form.action.select.title={%0} > New action > {%1} > Select action
form.action.menu.title={%0} > New action > {%1}
form.action.search.title={%0} > New action > Search

form.items.category.favorite=Favorite
form.items.category.search=Search: {%0}
form.items.addFavorite=Add to favorite
form.items.removeFavorite=Remove from favorite
form.items.delete.title={%0} > {%1} > Delete
form.items.search.keyword=Keywords

form.conditionContainer.list.title={%0} > Condition list
form.conditionContainer.move.title={%0} > {%1} > Move
form.conditionContainer.move.content=§7Select the move destination.

form.condition.addedItemMenu.title={%0} > Condition > {%1}
form.condition.category.title={%0} > New condition > Select category
form.condition.select.title={%0} > New condition > {%1} > Select condition
form.condition.menu.title={%0} > New condition > {%1}

form.recipe.menu.recipeList=Recipe list
form.recipe.addRecipe.title=Recipe > Add
form.recipe.recipeName=Name of the recipe
form.recipe.groupName=Name of the recipe group
form.recipe.exists="{%0}" already exists.
form.recipe.invalidName=Contains unavailable characters.
form.recipe.recipeMenu.title={%0}
form.recipe.recipeMenu.changeName=Rename recipe
form.recipe.recipeMenu.execute=Execute
form.recipe.recipeMenu.save=Save
form.recipe.recipeMenu.save.success=§bsaved.§f
form.recipe.recipeMenu.setTrigger=Edit trigger
form.recipe.recipeMenu.enable=Enable/Disable
form.recipe.select.title=Recipe > Edit
form.recipe.select.notfound=The recipe not found.
form.recipe.recipeList.title=Recipe > List
form.recipe.changeName.title={%0} > Rename
form.recipe.changeName.content0=Rename recipe
form.recipe.changeName.content1=New name
form.recipe.changeName.success=§bSuccessfully renamed.§f
form.recipe.delete.title={%0} > Delete
form.recipe.triggerList.title={%0} > Trigger list
form.recipe.args.return.set=Setting arguments and return values
form.recipe.args=[{%0}] {%1}
form.recipe.args.set=Setting arguments
form.recipe.args.add=<Add an argument>
form.recipe.args.type=Type
form.recipe.args.name=Name
form.recipe.args.description=Description
form.recipe.returnValue=return value {%0}
form.recipe.returnValue.set=Setting return value
form.recipe.returnValue.add=Add a return value
form.recipe.changeTarget=Change the target
form.recipe.changeTarget.title={%0} > Change the target
form.recipe.changeTarget.type=target type
form.recipe.changeTarget.name=player name (Enter multiple entries, separated by commas.)
form.recipe.changeTarget.name.placeholder=If you select the "specified player"
form.recipe.changeTarget.random=Specifies how many entries you want to pick.
form.recipe.changeTarget.random.placeholder=If you select the "random"
form.recipe.target.none=none
form.recipe.target.default=player who executed
form.recipe.target.specified=specified player
form.recipe.target.onWorld=all world players
form.recipe.target.all=all online players
form.recipe.target.random=random player
form.recipe.enable.title={%0} > Enable/Disable
form.recipe.enable=Enable
form.recipe.disabled=§eThis recipe is currently disabled

form.action.empty=§7There are no items or you do not have permission to view.\n§7You can set permissions with "/mineflow permission"

form.trigger.addedTriggerMenu.title={%0} > Trigger > {%1}
form.trigger.addedTriggerMenu.content=type: {%0}\n{%1}
form.trigger.selectTriggerType={%0} > New Trigger > type
form.trigger.triggerMenu.title={%0} > New Trigger > {%1}

form.command.name=Name
form.command.description=Description
form.command.permission=Permission
form.command.menu.title=Command
form.command.menu.commandList=Command list
form.command.addCommand.title=Command > Add
form.command.addCommand.permission.op=Only the OP can execute.
form.command.addCommand.permission.true=Anyone can execute.
form.command.addCommand.permission.custom=Custom permission.
form.command.addCommand.permission.custom.input=Name of permission.
form.command.alreadyExists=§eThat command has already been added.§f
form.command.alreadyUsed=§eThe command is already in use in other plugin.§f
form.command.notFound=The command is not found.
form.command.select.title=Select a command
form.command.commandMenu.editDescription=Edit description
form.command.commandMenu.editPermission=Edit permission
form.command.delete.title={%0} > Delete
form.command.changeDescription.title={%0} > Change description
form.command.changePermission.title={%0} > Change permission
form.command.commandList.title=Command > List
form.command.recipes=List of recipes triggered by this command

form.recipes.title={%0} > Recipe
form.recipes.add={%0} > Add recipe

form.event.list.title=List of events

form.form.menu.title=Form
form.form.menu.formList=Form list
form.form.addForm.title=Form > Add
form.form.addForm.type=Type
form.form.formMenu.preview=Preview
form.form.formMenu.changeTitle=Edit title
form.form.formMenu.editContent=Edit content
form.form.formMenu.changeName=Rename Form
form.form.formMenu.modal.button1=Edit button1
form.form.formMenu.modal.button2=Edit button2
form.form.formMenu.list.button=button: {%0}
form.form.formMenu.list.commandButton=Command button: {%0}, /{%1}
form.form.formMenu.list.commandConsoleButton=Console command button: {%0}, /{%1}
form.form.formMenu.list.formButton=Form button: {%0}, {%1}
form.form.formMenu.list.recipeButton=Recipe button: {%0}, {%1}
form.form.recipes=List of recipes triggered by this form

form.export.selectRecipe.title=Select recipe
form.export.recipeList.title=List of recipes to export
form.export.execution=Export with this content
form.export.empty=§cThere's no recipe.
form.export.name=Pack name
form.export.author=Author
form.export.detail=Description
form.export.success=§bSuccessfully exported. ({%0})
form.export.includeConfig=Include configuration files

form.import.selectFile.title=Select a file to import
form.import.selectFile=Import this file
form.import.duplicate={%0} is already exists. Do you want to override it?
form.import.success=§bSuccessfully imported.
import.plugin.outdated=§cThe recipe is created by a newer version of this plugin. Please update to use it.

form.element.variableDropdown.none=<none>
form.element.variableDropdown.inputManually=<enter manually>
form.element.variableDropdown.createVariable=<create a variable>

; command messages
command.console=Please run command in game

command.mineflow.usage=Usage: /mineflow <recipe | command | language>
command.mineflow.usage.console=Usage: /mineflow <language>
command.mineflow.description=Do something when conditions are met or when an event occurs

command.language.usage=Usage: /mineflow language <Language>
command.language.notfound=Language "{%0}" is not found. Only {%1} can be used.

command.recipe.usage=Usage: /mineflow recipe <add | edit | list>

command.command.usage=Usage: /mineflow command <add | edit | list>

command.permission.usage=Usage: /mineflow permission [add|remove|list] [player] [{%0}]"
command.permission.add.usage="Usage: /mineflow permission {%0} <player> <permission>"
command.permission.list.usage="Usage: /mineflow permission list <player>
command.permission.permission.notEnough=You don't have the permission to grant that permission.

command.addon.usage=Usage: /mineflow addon <list | reload | load | unload>
command.addon.list=Addons({%0}): {%1}
command.addon.reload.success=Reloaded {%0} addon{%1}.
command.addon.load.usage=Usage: /mineflow addon {%0} <name>
command.addon.load.not.exists=Addon file {%0} does not exists.
command.addon.load.already.loaded=Addon {%0} is already loaded.
command.addon.load.success=Addon {%0} loaded successfully.
command.addon.unload.not.loaded=Addon {%0} is not loaded.
command.addon.unload.success=Addon {%0} unloaded successfully.

; customForm messages
customForm.modal=Modal
customForm.form=List
customForm.custom_form=Custom
customForm.title=Title
customForm.text=Text
customForm.image=Image
customForm.content=Content
customForm.default=Default value
customForm.name=Name
customForm.exists=The form has already been added.
customForm.list.editButton=Edit button
customForm.list.addButton=<Add button>
customForm.list.button.type.normal=Button
customForm.list.button.type.command=Command button
customForm.list.button.type.commandConsole=Console command button
customForm.list.button.type.form=Form button
customForm.list.button.type.recipe=Recipe button
customForm.list.commandButton.command=command (without first /)
customForm.list.formButton.form=Form name
customForm.list.recipeButton.recipe=Recipe name
customForm.input.placeholder=placeholder
customForm.input.required=is required
customForm.numberInput.min=Minimum value
customForm.numberInput.max=Maximum value
customForm.numberInput.excludes=exclude values
customForm.slider.min=Minimum value
customForm.slider.max=Maximum value
customForm.slider.step=Step
customForm.dropdown.option=option {%0} (Leave blank to delete.)
customForm.dropdown.option.add=Add options (You can enter multiple numbers separated by "\sc".)
customForm.custom.element.add=<Add parts>
customForm.custom.element.select=Type of parts
customForm.custom.element.edit=Edit parts
customForm.label=Label
customForm.input=Input
customForm.numberInput=Number Input
customForm.toggle=Toggle button
customForm.cancelToggle=Cancel button
customForm.cancelToggle.detail=Ignore (Number)Input validation if selected.
customForm.slider=Slider
customForm.step_slider=StepSlider
customForm.dropdown=Dropdown
customForm.custom.element={%0}: {%1}
customForm.receive=Receive: {form.data} <- {%0}
customForm.receive.modal.button=Receive: {form.button{%0}.selected} <- (true | false)
customForm.receive.modal.button.text=Receive: {form.button{%0}.text} <- {%1}
customForm.receive.list.button=Receive: {form.button} <- {%0}
customForm.receive.custom=Receive: {form.data[{%0}]} <- {%1}
customForm.receive.custom.input=Receive: {form.data[{%0}]}\n  <- (input value)
customForm.receive.custom.slider=Receive: {form.data[{%0}]}\n  <- (selected number)
customForm.receive.custom.dropdown=Receive: {form.data[{%0}]}\n  <- (value of the selected location with 0 at the top)
customForm.receive.custom.dropdown.text=Receive: {form.selected[{%0}]}\n  <- (selected option)

; trigger messages
trigger.add = <Add trigger>
trigger.add.success=§bSuccessfully added.§f
trigger.alreadyExists=§eThe trigger has already been added.§f
trigger.notFound=§cThe trigger is not found. ({%0})§f

trigger.type.block=Block
trigger.block.string=When a player touch the block at {%0}.
trigger.block.add.touch=Touch the block to add.
trigger.block.warp=Teleport to this block
trigger.block.world.notfound=The world is not found.

trigger.type.event=Event
trigger.event.variable=Available variables:
trigger.event.list.title={%0} > Event trigger > Select
trigger.event.select.title={%0} > Event trigger > {%1}
trigger.event.PlayerChatEvent=When a player chats
trigger.event.PlayerCommandPreprocessEvent=When a player executes a command
trigger.event.PlayerInteractEvent=When the player touches the block
trigger.event.PlayerJoinEvent=When a player joins a server
trigger.event.PlayerQuitEvent=When a player leaves the server
trigger.event.BlockBreakEvent=When a player breaks a block
trigger.event.BlockPlaceEvent=When a player places a block
trigger.event.ServerStartEvent=When the server start
trigger.event.SignChangeEvent=When the text of the sign is changed
trigger.event.EntityDamageEvent=When a player takes damage
trigger.event.EntityAttackEvent=When a player attacks
trigger.event.PlayerToggleFlightEvent=When a player toggles their flying state
trigger.event.PlayerDeathEvent=When a player dies
trigger.event.EntityDeathEvent=When an entity or a player dies
trigger.event.EntityLevelChangeEvent=When a player switches to another world
trigger.event.CraftItemEvent=When a player crafts
trigger.event.PlayerDropItemEvent=When a player drops an item
trigger.event.FurnaceBurnEvent=When the furnace burns.
trigger.event.LevelLoadEvent=When a level loaded
trigger.event.PlayerBedEnterEvent=When a player sleeps in the bed.
trigger.event.PlayerChangeSkinEvent=When a player changes their own skin.
trigger.event.PlayerExhaustEvent=When a player's hunger level is reduced.
trigger.event.PlayerItemConsumeEvent=When a player eat an item.
trigger.event.PlayerMoveEvent=When a player moves
trigger.event.PlayerToggleSneakEvent=When a player toggles their sneaking state
trigger.event.PlayerToggleSprintEvent=When a player toggles their sprinting state
trigger.event.PlayerJumpEvent=When a player jumps
trigger.event.ProjectileHitEntityEvent=When a projectile hits an entity
trigger.event.InventoryPickupItemEvent=When a player pick up a item
trigger.event.MineflowRecipeLoadEvent=When any recipe is loaded

trigger.type.command=Command
trigger.command.string=When a player execute the command (/{%0}).
trigger.command.edit.title=Edit this command
trigger.command.select.title={%0} > CommandTrigger > Select
trigger.command.select.input=name of command
trigger.command.select.placeholder=without first slash
trigger.command.select.notFound=The command is not found.
trigger.command.confirmCreate.title=Create new command.
trigger.command.confirmCreate.content=The command "{%0}" does not exist. Do you want to create one?

trigger.type.form=Form
trigger.form.edit.title=Edit this form
trigger.form.select.title={%0} > FormTrigger > Select
trigger.form.select.input=name of form
trigger.form.select.notFound=The form has not been added yet.
trigger.form.type.select={%0}
trigger.form.receive=When this form was submitted.
trigger.form.close=When this form was closed.
trigger.form.button=When the button was clicked. : {%0}
trigger.form.string.submit=When a form was submitted. ({%0})
trigger.form.string.close=When a form was closed. ({%0})
trigger.form.string.button=When "{%1}" button on a form was clicked. ({%0})

trigger.type.time=Time
trigger.time.string=When the time is {%0}:{%1}
trigger.time.hours=Hours
trigger.time.minutes=Minutes

trigger.type.custom=Custom
trigger.custom.string=Custom trigger ({%0})
trigger.custom.name=Trigger identifier

; variable messages
variable.number.div.0=Cannot divide by zero.
variable.notFound=§cUndefined variable: {%0}.§f
variable.load.failed=Failed to load variable. {%0}
variable.convert.nbt.failed=§cVariable "{%0}" cannot be converted to NBT tag
variable.parse.failed=§cFailed to parse the variable: §e{{%0}}§f
variable.parse.failed.unexpected.end=§eUnexpected token at the end of the variable expression.§f
variable.parse.failed.expected.token=§eExpected [ §7{%0}§e ], but found §7{%1}§e.§f
variable.parse.failed.expected.end=§eExpected [ §7{%0}§e ] at the end of the variable expression.§f

; category messages
category.common=Common
category.block=Block
category.command=Command
category.entity=Entity
category.event=Event
category.form=Form
category.inventory=Inventory
category.item=Item
category.world=World
category.player=Player
category.message=Message
category.player_permission=Player permission
category.bossbar=Bossbar
category.effect=Effect
category.plugin=Other plugin
category.math=Mathematics
category.variable=Variable
category.player_data=Player data
category.string=String
category.script=Script
category.if=If-then
category.loop=Loop
category.scoreboard=Scoreboard
category.config=Config file
category.internal=Internal API
category.button=Form Button
category.element=Form Element

; setting messages
setting.language=Language
setting.event=Event

permission.loop=Loop
permission.cheat=Cheat
permission.config=Configuration file
permission.console=Console
permission.permission=Permission
permission.form.selectPlayer.title="/mineflow permission > Select player"
permission.form.selectPlayer.dropdown=Player
permission.form.edit.title="{%0} > Edit permission"

dependency.plugin.not.found=Recipe {%0} depends on plugin {%1}, but it is not loaded.
dependency.addon.not.found=Recipe {%0} depends on addon {%1}, but it is not loaded.
dependency.addon.addon.not.found=Addon {%0} depends on addon {%1}, but it is not loaded.
dependency.circular.dependency=Circular dependency detected. {%0}

; addon messages
addon.load.failed=§cFailed to load addon "{%0}"§f: §e{%1}
addon.manifest.notfound=§eManifest recipe "_manifest" does not found.
addon.manifest.variable.notfound=§eManifest recipe must have a variable named "manifest".
addon.manifest.variable.type.error=§eManifest variable must be a §7map variable§e.
addon.manifest.variable.key.missing=§eManifest variable must have key "{%0}" of type {%1}.
addon.manifest.info.type.error=§eVariable §7{manifest[{%0}]}§e must be a §7map variable§e.
addon.manifest.info.key.missing=§eVariable §7{manifest[{%0}]}§e must have key "{%1}".
addon.manifest.recipe.notfound=§eRecipe "{%0}" does not exists in the recipe pack.
addon.manifest.id.exists=§eAction id "{%0}" is already registered.
